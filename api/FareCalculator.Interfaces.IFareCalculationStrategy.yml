### YamlMime:ManagedReference
items:
- uid: FareCalculator.Interfaces.IFareCalculationStrategy
  commentId: T:FareCalculator.Interfaces.IFareCalculationStrategy
  id: IFareCalculationStrategy
  parent: FareCalculator.Interfaces
  children:
  - FareCalculator.Interfaces.IFareCalculationStrategy.CalculateBaseFareAsync(FareCalculator.Models.FareRequest)
  - FareCalculator.Interfaces.IFareCalculationStrategy.CanHandle(FareCalculator.Models.FareRequest)
  - FareCalculator.Interfaces.IFareCalculationStrategy.Priority
  - FareCalculator.Interfaces.IFareCalculationStrategy.StrategyName
  langs:
  - csharp
  - vb
  name: IFareCalculationStrategy
  nameWithType: IFareCalculationStrategy
  fullName: FareCalculator.Interfaces.IFareCalculationStrategy
  type: Interface
  source:
    remote:
      path: src/FareCalculator/Interfaces/IFareCalculationStrategy.cs
      branch: fare-calculator
      repo: https://github.com/todicn/FareCalculator.git
    id: IFareCalculationStrategy
    path: src/FareCalculator/Interfaces/IFareCalculationStrategy.cs
    startLine: 8
  assemblies:
  - FareCalculator
  namespace: FareCalculator.Interfaces
  summary: >-
    Defines the contract for fare calculation strategies that can compute base fares using different algorithms.

    Implements the Strategy pattern to allow runtime selection of fare calculation methods.
  example: []
  syntax:
    content: public interface IFareCalculationStrategy
    content.vb: Public Interface IFareCalculationStrategy
- uid: FareCalculator.Interfaces.IFareCalculationStrategy.StrategyName
  commentId: P:FareCalculator.Interfaces.IFareCalculationStrategy.StrategyName
  id: StrategyName
  parent: FareCalculator.Interfaces.IFareCalculationStrategy
  langs:
  - csharp
  - vb
  name: StrategyName
  nameWithType: IFareCalculationStrategy.StrategyName
  fullName: FareCalculator.Interfaces.IFareCalculationStrategy.StrategyName
  type: Property
  source:
    remote:
      path: src/FareCalculator/Interfaces/IFareCalculationStrategy.cs
      branch: fare-calculator
      repo: https://github.com/todicn/FareCalculator.git
    id: StrategyName
    path: src/FareCalculator/Interfaces/IFareCalculationStrategy.cs
    startLine: 14
  assemblies:
  - FareCalculator
  namespace: FareCalculator.Interfaces
  summary: Gets the unique name of this fare calculation strategy.
  example: []
  syntax:
    content: string StrategyName { get; }
    parameters: []
    return:
      type: System.String
      description: A descriptive name identifying the strategy (e.g., "ZoneBased", "DistanceBased").
    content.vb: ReadOnly Property StrategyName As String
  overload: FareCalculator.Interfaces.IFareCalculationStrategy.StrategyName*
- uid: FareCalculator.Interfaces.IFareCalculationStrategy.CalculateBaseFareAsync(FareCalculator.Models.FareRequest)
  commentId: M:FareCalculator.Interfaces.IFareCalculationStrategy.CalculateBaseFareAsync(FareCalculator.Models.FareRequest)
  id: CalculateBaseFareAsync(FareCalculator.Models.FareRequest)
  parent: FareCalculator.Interfaces.IFareCalculationStrategy
  langs:
  - csharp
  - vb
  name: CalculateBaseFareAsync(FareRequest)
  nameWithType: IFareCalculationStrategy.CalculateBaseFareAsync(FareRequest)
  fullName: FareCalculator.Interfaces.IFareCalculationStrategy.CalculateBaseFareAsync(FareCalculator.Models.FareRequest)
  type: Method
  source:
    remote:
      path: src/FareCalculator/Interfaces/IFareCalculationStrategy.cs
      branch: fare-calculator
      repo: https://github.com/todicn/FareCalculator.git
    id: CalculateBaseFareAsync
    path: src/FareCalculator/Interfaces/IFareCalculationStrategy.cs
    startLine: 23
  assemblies:
  - FareCalculator
  namespace: FareCalculator.Interfaces
  summary: Calculates the base fare for a transit journey asynchronously using this strategy's specific algorithm.
  example: []
  syntax:
    content: Task<decimal> CalculateBaseFareAsync(FareRequest request)
    parameters:
    - id: request
      type: FareCalculator.Models.FareRequest
      description: The fare calculation request containing journey details.
    return:
      type: System.Threading.Tasks.Task{System.Decimal}
      description: A task that represents the asynchronous operation. The task result contains the calculated base fare amount.
    content.vb: Function CalculateBaseFareAsync(request As FareRequest) As Task(Of Decimal)
  overload: FareCalculator.Interfaces.IFareCalculationStrategy.CalculateBaseFareAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when the request parameter is null.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown when the strategy cannot handle the given request.
- uid: FareCalculator.Interfaces.IFareCalculationStrategy.CanHandle(FareCalculator.Models.FareRequest)
  commentId: M:FareCalculator.Interfaces.IFareCalculationStrategy.CanHandle(FareCalculator.Models.FareRequest)
  id: CanHandle(FareCalculator.Models.FareRequest)
  parent: FareCalculator.Interfaces.IFareCalculationStrategy
  langs:
  - csharp
  - vb
  name: CanHandle(FareRequest)
  nameWithType: IFareCalculationStrategy.CanHandle(FareRequest)
  fullName: FareCalculator.Interfaces.IFareCalculationStrategy.CanHandle(FareCalculator.Models.FareRequest)
  type: Method
  source:
    remote:
      path: src/FareCalculator/Interfaces/IFareCalculationStrategy.cs
      branch: fare-calculator
      repo: https://github.com/todicn/FareCalculator.git
    id: CanHandle
    path: src/FareCalculator/Interfaces/IFareCalculationStrategy.cs
    startLine: 30
  assemblies:
  - FareCalculator
  namespace: FareCalculator.Interfaces
  summary: Determines whether this strategy can handle the specified fare calculation request.
  example: []
  syntax:
    content: bool CanHandle(FareRequest request)
    parameters:
    - id: request
      type: FareCalculator.Models.FareRequest
      description: The fare calculation request to evaluate.
    return:
      type: System.Boolean
      description: True if this strategy can process the request; otherwise, false.
    content.vb: Function CanHandle(request As FareRequest) As Boolean
  overload: FareCalculator.Interfaces.IFareCalculationStrategy.CanHandle*
- uid: FareCalculator.Interfaces.IFareCalculationStrategy.Priority
  commentId: P:FareCalculator.Interfaces.IFareCalculationStrategy.Priority
  id: Priority
  parent: FareCalculator.Interfaces.IFareCalculationStrategy
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: IFareCalculationStrategy.Priority
  fullName: FareCalculator.Interfaces.IFareCalculationStrategy.Priority
  type: Property
  source:
    remote:
      path: src/FareCalculator/Interfaces/IFareCalculationStrategy.cs
      branch: fare-calculator
      repo: https://github.com/todicn/FareCalculator.git
    id: Priority
    path: src/FareCalculator/Interfaces/IFareCalculationStrategy.cs
    startLine: 37
  assemblies:
  - FareCalculator
  namespace: FareCalculator.Interfaces
  summary: >-
    Gets the priority of this strategy for selection when multiple strategies can handle a request.

    Higher values indicate higher priority.
  example: []
  syntax:
    content: int Priority { get; }
    parameters: []
    return:
      type: System.Int32
      description: An integer representing the strategy's priority. Higher numbers are selected first.
    content.vb: ReadOnly Property Priority As Integer
  overload: FareCalculator.Interfaces.IFareCalculationStrategy.Priority*
references:
- uid: FareCalculator.Interfaces
  commentId: N:FareCalculator.Interfaces
  href: FareCalculator.html
  name: FareCalculator.Interfaces
  nameWithType: FareCalculator.Interfaces
  fullName: FareCalculator.Interfaces
  spec.csharp:
  - uid: FareCalculator
    name: FareCalculator
    href: FareCalculator.html
  - name: .
  - uid: FareCalculator.Interfaces
    name: Interfaces
    href: FareCalculator.Interfaces.html
  spec.vb:
  - uid: FareCalculator
    name: FareCalculator
    href: FareCalculator.html
  - name: .
  - uid: FareCalculator.Interfaces
    name: Interfaces
    href: FareCalculator.Interfaces.html
- uid: FareCalculator.Interfaces.IFareCalculationStrategy.StrategyName*
  commentId: Overload:FareCalculator.Interfaces.IFareCalculationStrategy.StrategyName
  href: FareCalculator.Interfaces.IFareCalculationStrategy.html#FareCalculator_Interfaces_IFareCalculationStrategy_StrategyName
  name: StrategyName
  nameWithType: IFareCalculationStrategy.StrategyName
  fullName: FareCalculator.Interfaces.IFareCalculationStrategy.StrategyName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: FareCalculator.Interfaces.IFareCalculationStrategy.CalculateBaseFareAsync*
  commentId: Overload:FareCalculator.Interfaces.IFareCalculationStrategy.CalculateBaseFareAsync
  href: FareCalculator.Interfaces.IFareCalculationStrategy.html#FareCalculator_Interfaces_IFareCalculationStrategy_CalculateBaseFareAsync_FareCalculator_Models_FareRequest_
  name: CalculateBaseFareAsync
  nameWithType: IFareCalculationStrategy.CalculateBaseFareAsync
  fullName: FareCalculator.Interfaces.IFareCalculationStrategy.CalculateBaseFareAsync
- uid: FareCalculator.Models.FareRequest
  commentId: T:FareCalculator.Models.FareRequest
  parent: FareCalculator.Models
  href: FareCalculator.Models.FareRequest.html
  name: FareRequest
  nameWithType: FareRequest
  fullName: FareCalculator.Models.FareRequest
- uid: System.Threading.Tasks.Task{System.Decimal}
  commentId: T:System.Threading.Tasks.Task{System.Decimal}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<decimal>
  nameWithType: Task<decimal>
  fullName: System.Threading.Tasks.Task<decimal>
  nameWithType.vb: Task(Of Decimal)
  fullName.vb: System.Threading.Tasks.Task(Of Decimal)
  name.vb: Task(Of Decimal)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Decimal
    name: decimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.decimal
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Decimal
    name: Decimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.decimal
  - name: )
- uid: FareCalculator.Models
  commentId: N:FareCalculator.Models
  href: FareCalculator.html
  name: FareCalculator.Models
  nameWithType: FareCalculator.Models
  fullName: FareCalculator.Models
  spec.csharp:
  - uid: FareCalculator
    name: FareCalculator
    href: FareCalculator.html
  - name: .
  - uid: FareCalculator.Models
    name: Models
    href: FareCalculator.Models.html
  spec.vb:
  - uid: FareCalculator
    name: FareCalculator
    href: FareCalculator.html
  - name: .
  - uid: FareCalculator.Models
    name: Models
    href: FareCalculator.Models.html
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: FareCalculator.Interfaces.IFareCalculationStrategy.CanHandle*
  commentId: Overload:FareCalculator.Interfaces.IFareCalculationStrategy.CanHandle
  href: FareCalculator.Interfaces.IFareCalculationStrategy.html#FareCalculator_Interfaces_IFareCalculationStrategy_CanHandle_FareCalculator_Models_FareRequest_
  name: CanHandle
  nameWithType: IFareCalculationStrategy.CanHandle
  fullName: FareCalculator.Interfaces.IFareCalculationStrategy.CanHandle
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: FareCalculator.Interfaces.IFareCalculationStrategy.Priority*
  commentId: Overload:FareCalculator.Interfaces.IFareCalculationStrategy.Priority
  href: FareCalculator.Interfaces.IFareCalculationStrategy.html#FareCalculator_Interfaces_IFareCalculationStrategy_Priority
  name: Priority
  nameWithType: IFareCalculationStrategy.Priority
  fullName: FareCalculator.Interfaces.IFareCalculationStrategy.Priority
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
