### YamlMime:ManagedReference
items:
- uid: FareCalculator.Interfaces.IFareCalculationState
  commentId: T:FareCalculator.Interfaces.IFareCalculationState
  id: IFareCalculationState
  parent: FareCalculator.Interfaces
  children:
  - FareCalculator.Interfaces.IFareCalculationState.CanTransitionTo(FareCalculator.Interfaces.IFareCalculationState)
  - FareCalculator.Interfaces.IFareCalculationState.ProcessAsync(FareCalculator.Interfaces.FareCalculationContext)
  - FareCalculator.Interfaces.IFareCalculationState.StateName
  langs:
  - csharp
  - vb
  name: IFareCalculationState
  nameWithType: IFareCalculationState
  fullName: FareCalculator.Interfaces.IFareCalculationState
  type: Interface
  source:
    remote:
      path: src/FareCalculator/Interfaces/IFareCalculationState.cs
      branch: fare-calculator
      repo: https://github.com/todicn/FareCalculator.git
    id: IFareCalculationState
    path: src/FareCalculator/Interfaces/IFareCalculationState.cs
    startLine: 8
  assemblies:
  - FareCalculator
  namespace: FareCalculator.Interfaces
  summary: >-
    Defines the contract for states in the fare calculation state machine.

    Implements the State pattern to manage the fare calculation workflow through distinct processing phases.
  example: []
  syntax:
    content: public interface IFareCalculationState
    content.vb: Public Interface IFareCalculationState
- uid: FareCalculator.Interfaces.IFareCalculationState.StateName
  commentId: P:FareCalculator.Interfaces.IFareCalculationState.StateName
  id: StateName
  parent: FareCalculator.Interfaces.IFareCalculationState
  langs:
  - csharp
  - vb
  name: StateName
  nameWithType: IFareCalculationState.StateName
  fullName: FareCalculator.Interfaces.IFareCalculationState.StateName
  type: Property
  source:
    remote:
      path: src/FareCalculator/Interfaces/IFareCalculationState.cs
      branch: fare-calculator
      repo: https://github.com/todicn/FareCalculator.git
    id: StateName
    path: src/FareCalculator/Interfaces/IFareCalculationState.cs
    startLine: 14
  assemblies:
  - FareCalculator
  namespace: FareCalculator.Interfaces
  summary: Gets the unique name of this fare calculation state.
  example: []
  syntax:
    content: string StateName { get; }
    parameters: []
    return:
      type: System.String
      description: A descriptive name identifying the state (e.g., "InitialCalculation", "DiscountApplication").
    content.vb: ReadOnly Property StateName As String
  overload: FareCalculator.Interfaces.IFareCalculationState.StateName*
- uid: FareCalculator.Interfaces.IFareCalculationState.ProcessAsync(FareCalculator.Interfaces.FareCalculationContext)
  commentId: M:FareCalculator.Interfaces.IFareCalculationState.ProcessAsync(FareCalculator.Interfaces.FareCalculationContext)
  id: ProcessAsync(FareCalculator.Interfaces.FareCalculationContext)
  parent: FareCalculator.Interfaces.IFareCalculationState
  langs:
  - csharp
  - vb
  name: ProcessAsync(FareCalculationContext)
  nameWithType: IFareCalculationState.ProcessAsync(FareCalculationContext)
  fullName: FareCalculator.Interfaces.IFareCalculationState.ProcessAsync(FareCalculator.Interfaces.FareCalculationContext)
  type: Method
  source:
    remote:
      path: src/FareCalculator/Interfaces/IFareCalculationState.cs
      branch: fare-calculator
      repo: https://github.com/todicn/FareCalculator.git
    id: ProcessAsync
    path: src/FareCalculator/Interfaces/IFareCalculationState.cs
    startLine: 23
  assemblies:
  - FareCalculator
  namespace: FareCalculator.Interfaces
  summary: Processes the fare calculation context according to this state's specific logic and responsibilities.
  example: []
  syntax:
    content: Task<FareCalculationContext> ProcessAsync(FareCalculationContext context)
    parameters:
    - id: context
      type: FareCalculator.Interfaces.FareCalculationContext
      description: The fare calculation context containing request data, current state, and processing results.
    return:
      type: System.Threading.Tasks.Task{FareCalculator.Interfaces.FareCalculationContext}
      description: A task that represents the asynchronous operation. The task result contains the updated context after processing.
    content.vb: Function ProcessAsync(context As FareCalculationContext) As Task(Of FareCalculationContext)
  overload: FareCalculator.Interfaces.IFareCalculationState.ProcessAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when the context parameter is null.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: Thrown when the state cannot process the current context.
- uid: FareCalculator.Interfaces.IFareCalculationState.CanTransitionTo(FareCalculator.Interfaces.IFareCalculationState)
  commentId: M:FareCalculator.Interfaces.IFareCalculationState.CanTransitionTo(FareCalculator.Interfaces.IFareCalculationState)
  id: CanTransitionTo(FareCalculator.Interfaces.IFareCalculationState)
  parent: FareCalculator.Interfaces.IFareCalculationState
  langs:
  - csharp
  - vb
  name: CanTransitionTo(IFareCalculationState)
  nameWithType: IFareCalculationState.CanTransitionTo(IFareCalculationState)
  fullName: FareCalculator.Interfaces.IFareCalculationState.CanTransitionTo(FareCalculator.Interfaces.IFareCalculationState)
  type: Method
  source:
    remote:
      path: src/FareCalculator/Interfaces/IFareCalculationState.cs
      branch: fare-calculator
      repo: https://github.com/todicn/FareCalculator.git
    id: CanTransitionTo
    path: src/FareCalculator/Interfaces/IFareCalculationState.cs
    startLine: 31
  assemblies:
  - FareCalculator
  namespace: FareCalculator.Interfaces
  summary: Determines whether this state can transition to the specified next state according to the state machine rules.
  example: []
  syntax:
    content: bool CanTransitionTo(IFareCalculationState nextState)
    parameters:
    - id: nextState
      type: FareCalculator.Interfaces.IFareCalculationState
      description: The proposed next state in the workflow.
    return:
      type: System.Boolean
      description: True if the transition is valid; otherwise, false.
    content.vb: Function CanTransitionTo(nextState As IFareCalculationState) As Boolean
  overload: FareCalculator.Interfaces.IFareCalculationState.CanTransitionTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when the nextState parameter is null.
references:
- uid: FareCalculator.Interfaces
  commentId: N:FareCalculator.Interfaces
  href: FareCalculator.html
  name: FareCalculator.Interfaces
  nameWithType: FareCalculator.Interfaces
  fullName: FareCalculator.Interfaces
  spec.csharp:
  - uid: FareCalculator
    name: FareCalculator
    href: FareCalculator.html
  - name: .
  - uid: FareCalculator.Interfaces
    name: Interfaces
    href: FareCalculator.Interfaces.html
  spec.vb:
  - uid: FareCalculator
    name: FareCalculator
    href: FareCalculator.html
  - name: .
  - uid: FareCalculator.Interfaces
    name: Interfaces
    href: FareCalculator.Interfaces.html
- uid: FareCalculator.Interfaces.IFareCalculationState.StateName*
  commentId: Overload:FareCalculator.Interfaces.IFareCalculationState.StateName
  href: FareCalculator.Interfaces.IFareCalculationState.html#FareCalculator_Interfaces_IFareCalculationState_StateName
  name: StateName
  nameWithType: IFareCalculationState.StateName
  fullName: FareCalculator.Interfaces.IFareCalculationState.StateName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: FareCalculator.Interfaces.IFareCalculationState.ProcessAsync*
  commentId: Overload:FareCalculator.Interfaces.IFareCalculationState.ProcessAsync
  href: FareCalculator.Interfaces.IFareCalculationState.html#FareCalculator_Interfaces_IFareCalculationState_ProcessAsync_FareCalculator_Interfaces_FareCalculationContext_
  name: ProcessAsync
  nameWithType: IFareCalculationState.ProcessAsync
  fullName: FareCalculator.Interfaces.IFareCalculationState.ProcessAsync
- uid: FareCalculator.Interfaces.FareCalculationContext
  commentId: T:FareCalculator.Interfaces.FareCalculationContext
  parent: FareCalculator.Interfaces
  href: FareCalculator.Interfaces.FareCalculationContext.html
  name: FareCalculationContext
  nameWithType: FareCalculationContext
  fullName: FareCalculator.Interfaces.FareCalculationContext
- uid: System.Threading.Tasks.Task{FareCalculator.Interfaces.FareCalculationContext}
  commentId: T:System.Threading.Tasks.Task{FareCalculator.Interfaces.FareCalculationContext}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<FareCalculationContext>
  nameWithType: Task<FareCalculationContext>
  fullName: System.Threading.Tasks.Task<FareCalculator.Interfaces.FareCalculationContext>
  nameWithType.vb: Task(Of FareCalculationContext)
  fullName.vb: System.Threading.Tasks.Task(Of FareCalculator.Interfaces.FareCalculationContext)
  name.vb: Task(Of FareCalculationContext)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: FareCalculator.Interfaces.FareCalculationContext
    name: FareCalculationContext
    href: FareCalculator.Interfaces.FareCalculationContext.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: FareCalculator.Interfaces.FareCalculationContext
    name: FareCalculationContext
    href: FareCalculator.Interfaces.FareCalculationContext.html
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: FareCalculator.Interfaces.IFareCalculationState.CanTransitionTo*
  commentId: Overload:FareCalculator.Interfaces.IFareCalculationState.CanTransitionTo
  href: FareCalculator.Interfaces.IFareCalculationState.html#FareCalculator_Interfaces_IFareCalculationState_CanTransitionTo_FareCalculator_Interfaces_IFareCalculationState_
  name: CanTransitionTo
  nameWithType: IFareCalculationState.CanTransitionTo
  fullName: FareCalculator.Interfaces.IFareCalculationState.CanTransitionTo
- uid: FareCalculator.Interfaces.IFareCalculationState
  commentId: T:FareCalculator.Interfaces.IFareCalculationState
  parent: FareCalculator.Interfaces
  href: FareCalculator.Interfaces.IFareCalculationState.html
  name: IFareCalculationState
  nameWithType: IFareCalculationState
  fullName: FareCalculator.Interfaces.IFareCalculationState
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
